#!/usr/bin/env python

Import("env")
Import("env_modules")

env_svg = env_modules.Clone()

# Thirdparty source files

thirdparty_dir = "#thirdparty/lunasvg/"
thirdparty_obj = []
thirdparty_sources = [
    "source/graphics.cpp",
    "source/lunasvg.cpp",
    "source/plutovg-blend.c",
    "source/plutovg-canvas.c",
    "source/plutovg-font.c",
    "source/plutovg-ft-math.c",
    "source/plutovg-ft-raster.c",
    "source/plutovg-ft-stroker.c",
    "source/plutovg-matrix.c",
    "source/plutovg-paint.c",
    "source/plutovg-path.c",
    "source/plutovg-rasterize.c",
    "source/plutovg-surface.c",
    "source/svgelement.cpp",
    "source/svggeometryelement.cpp",
    "source/svglayoutstate.cpp",
    "source/svgpaintelement.cpp",
    "source/svgparser.cpp",
    "source/svgproperty.cpp",
    "source/svgrenderstate.cpp",
    "source/svgtextelement.cpp",
]
thirdparty_sources = [thirdparty_dir + file for file in thirdparty_sources]

env_svg.Prepend(CPPPATH=[thirdparty_dir + "include"])

# Enable lunasvg static object linking.
env_svg.Append(CPPDEFINES=["PLUTOVG_BUILD", "PLUTOVG_BUILD_STATIC", "LUNASVG_BUILD", "LUNASVG_BUILD_STATIC"])

env_thirdparty = env_svg.Clone()
env_thirdparty.disable_warnings()
env_thirdparty.add_source_files(thirdparty_obj, thirdparty_sources)

env.modules_sources += thirdparty_obj

# Godot source files

module_obj = []

env_svg.add_source_files(module_obj, "*.cpp")
env.modules_sources += module_obj

# Needed to force rebuilding the module files when the thirdparty library is updated.
env.Depends(module_obj, thirdparty_obj)
